$date
	Sat Nov 07 19:18:07 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! zero $end
$var wire 4 " y [3:0] $end
$var wire 1 # carry $end
$var reg 4 $ b [3:0] $end
$var reg 1 % clk $end
$var reg 3 & en [2:0] $end
$var reg 3 ' f [2:0] $end
$var reg 1 ( reset $end
$scope module a1 $end
$var wire 4 ) b [3:0] $end
$var wire 1 % clk $end
$var wire 3 * en [2:0] $end
$var wire 3 + f [2:0] $end
$var wire 1 ( reset $end
$var wire 1 ! zero $end
$var wire 4 , y [3:0] $end
$var wire 4 - data_bus [3:0] $end
$var wire 1 # carry $end
$var wire 4 . cable2 [3:0] $end
$var wire 4 / cable1 [3:0] $end
$scope module a1 $end
$var wire 1 0 en $end
$var wire 4 1 in [3:0] $end
$var wire 4 2 out [3:0] $end
$upscope $end
$scope module a2 $end
$var wire 4 3 b [3:0] $end
$var wire 3 4 f [2:0] $end
$var wire 4 5 a [3:0] $end
$var reg 5 6 c [4:0] $end
$var reg 1 # carry $end
$var reg 4 7 y [3:0] $end
$var reg 1 ! zero $end
$upscope $end
$scope module a3 $end
$var wire 1 % clk $end
$var wire 4 8 d [3:0] $end
$var wire 1 9 en $end
$var wire 1 ( reset $end
$var reg 4 : q [3:0] $end
$upscope $end
$scope module a4 $end
$var wire 1 ; en $end
$var wire 4 < in [3:0] $end
$var wire 4 = out [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx =
bx <
x;
bx :
x9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
x0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
x(
bx '
bx &
x%
bx $
x#
bx "
x!
$end
#1
b0 .
b0 5
b0 :
b0 "
b0 ,
b0 =
b0 /
b0 7
b0 8
b0 <
1!
0#
b0 6
b0 -
b0 2
b0 3
19
1;
10
0(
b10 '
b10 +
b10 4
b0 $
b0 )
b0 1
b111 &
b111 *
1%
#2
0%
1(
#3
b1111 "
b1111 ,
b1111 =
b1111 /
b1111 7
b1111 8
b1111 <
b1111 6
b1111 -
b1111 2
b1111 3
1%
b1111 $
b1111 )
b1111 1
0(
#4
b0 "
b0 ,
b0 =
b1 -
b1 2
b1 3
b0 /
b0 7
b0 8
b0 <
b0 6
0%
b1 $
b1 )
b1 1
b0 '
b0 +
b0 4
#5
b1111 .
b1111 5
b1111 :
b1010 "
b1010 ,
b1010 =
b101 -
b101 2
b101 3
b1010 /
b1010 7
b1010 8
b1010 <
1!
0#
b1010 6
1%
b101 $
b101 )
b101 1
b1 '
b1 +
b1 4
#6
b11 "
b11 ,
b11 =
b100 -
b100 2
b100 3
b11 /
b11 7
b11 8
b11 <
0!
1#
b10011 6
0%
b100 $
b100 )
b100 1
b11 '
b11 +
b11 4
#7
b1011 .
b1011 5
b1011 :
b1111 "
b1111 ,
b1111 =
b0 -
b0 2
b0 3
b1111 /
b1111 7
b1111 8
b1111 <
b11111 6
1%
b0 $
b0 )
b0 1
b100 '
b100 +
b100 4
#8
0%
#9
b11111 6
b1111 .
b1111 5
b1111 :
1%
#10
0%
#11
1%
#12
0%
#13
1%
#14
0%
#15
1%
#16
0%
#17
1%
#18
0%
#19
1%
#20
0%
#21
1%
#22
0%
#23
1%
#24
0%
#25
1%
#26
0%
#27
1%
#28
0%
#29
1%
#30
0%
#31
1%
#32
0%
#33
1%
#34
0%
#35
1%
#36
0%
#37
1%
